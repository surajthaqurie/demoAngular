import { AfterContentChecked, AfterViewInit, Component, Input, OnChanges, OnInit } from '@angular/core';
import { NgForm } from '@angular/forms';
import { Router } from '@angular/router';
import { CategoryService } from 'src/app/@core/services/category.services';
import { PostService } from 'src/app/@core/services/post.service';

@Component({
  selector: 'app-update-post',
  templateUrl: './update-post.component.html',
  styleUrls: ['./update-post.component.css'],
})
export class UpdatePostComponent implements OnInit, OnChanges {
  @Input() postUpdateId: string = ''

  constructor(
    public categoryService: CategoryService,
    public router: Router,
    public postService: PostService
  ) { }


  // catTitle: string = '';

  ngOnChanges(): void {
    this.postService.getPostById(this.postUpdateId).subscribe({
      next: (result: any) => {
        // this.post = {
        //   title: result?.posts?.title,
        //   content: result?.posts?.content,
        //   category: result?.posts?.category?.title,
        // }
        // this.catTitle = this.post.category
        this.post = result.posts;

        console.log('--------------------', result.posts.category.title)
      }
    })
  }

  post: any;
  category: any;
  errorMessage: string = '';
  successMessage: string = '';
  errTitle: string = '';
  errContent: string = '';
  showOptions: boolean = true;
  categoryError: string = '';
  file: any = '';


  ngOnInit(): void {

    this.categoryService.getAllCategory().subscribe({
      next: (result: any) => {
        // console.log('-----------------------',result)
        this.category = result.category;
      },
      error: (err) => { /* console.log('-------------', err) */ }

    });


  }

  onFileSelect(event: any) {
    this.file = event.target.files[0];
    console.log('****************',  this.file );

  }

  updatePost(postData: NgForm) {

    if (postData.invalid) {
      return;
    }
    const data = postData.value;

    this.errorMessage = '';
    this.successMessage = '';
    this.errTitle = '';
    this.errContent = '';
    this.categoryError = '';

    // console.log(this.postUpdateId)

    this.postService.updatedPost(this.postUpdateId, data, this.file).subscribe({
      next: (result) => {
        window.location.reload();
        console.log('--------------------', result);
      },
      error: (err) => {
        console.log(err.error)
        if (err.error.msg) {

          err.error.msg.includes('Unauthorized') ? this.errorMessage = err.error.msg : ''
          err.error.error.includes('Conflict') ? this.errorMessage = err.error.msg : ''

          err.error.msg[0].includes('title')
            ? (this.errTitle = err.error.msg[0])
            : '';

          err.error.msg[0].includes('category')
            ? (this.categoryError = err.error.msg[0])
            : '';

          err.error.msg[0].includes('content')
            ? (this.errContent = err.error.msg[0])
            : '';
        } else {
          this.errorMessage = 'Something went wrong please check your connection!!!'
        }
      }
    })

  }
  showSelect() {
    this.showOptions = this.showOptions ? false : true;
  }

}
